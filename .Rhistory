setwd("./RobClustTimeSeries")
getwd()
document()
devtools::document()
install("RobClustTimeSeries")
install.packages("RobClustTimeSeries")
install.packages("RobClustTimeSeries")
ando_bai
generate_grouped_factorstructure
?generate_grouped_factorstructure
devtools::load_all(".")
?generate_grouped_factorstructure
devtools::load_all(".")
ls()
?bepaal_rho_parameters
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
create_theta_real(1)
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
devtools::load_all(".")
library(RobClustTimeSeries) #= my package
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
getwd()
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
create_covMat_crosssectional_dependence()
?create_theta_real
create_theta_real
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
head(read.csv2("data/LijstAlleParametersCSV.csv"))
using_simulatie_and_optimize_C
#' Calculates sigma2maxmodel
#'
#'we need the sigma2 of the maxmodel to use (in term 2,3,4 of the PIC) instead of the configuration-dependent sigma2. (based on text in AndoBai 2016).
#'sigma2_max_model can probably be set to 1 as well, as it can be absorbed in parameter C.
#' @export
calculate_sigma2maxmodel <- function() {
if(!exists("optimize_kappa")) {
if(!update1 & !update2 &
mean(aantalfactoren_groups,na.rm=T) == k_max &
aantalgroepen == max(aantalgroepen_candidates) &
aantalfactoren_common == max(k_common_candidates) ) {
sigma2_max_model = calculate_sigma2(calculate_error_term())
}
if(update1 & update2) {
sigma2_max_model = NA
}
}
return(sigma2_max_model)
}
calculate_sigma2maxmodel
calculate_sigma2maxmodel()
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
adapt_X_to_SCHATTEN_MET_AANTALVARS
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
factor
?factor
comfactor
lambda
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
maximum
sigma2_max_model
TUNINGPSI
LE
c(0, 4,  3.5,  3,  2.5)  * EXTRA_THETA_FACTOR
c(0, 4,  3.5,  3,  2.5)  * 1
LGR_FACTOR_mean
use_tkmeans
?tkmeans
??tkmans
?tclust::tkmeans
ls()
Y = generate_Y()
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
?cellWise::MacroPCA()
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
ls()
load("data/Y_dgp1.Rds")
readRDS("data/Y_dgp1.Rds")
Y_dgp1 = readRDS("data/Y_dgp1.Rds")
Y_dgp1
use_data(Y_dgp)
devtools::use_data(Y_dgp)
?use_data
usethis::use_data(Y_dgp)
usethis::use_data(Y_dgp1)
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
g_real_dgp1 = readRDS("data/g_real_dgp1.Rds")
Y_dgp1 = readRDS("data/Y_dgp1.Rds")
getwd()
#Adding datasets to the package:
Y_dgp1 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/Y_dgp1.Rds")
g_real_dgp1 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/g_real_dgp1.Rds")
usethis::use_data(Y_dgp1,g_real_dgp1)
usethis::use_data(Y_dgp1,g_real_dgp1,overwrite = TRUE)
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
create_Y_abctypes
create_Y_abctypes(Y, proporties_types)
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
optimize_kappa
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#Adding datasets to the package:
Y_dgp3 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/Y_dgp3.Rds")
g_real_dgp3 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/g_real_dgp3.Rds")
X_dgp3 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/g_real_dgp3.Rds")
factor_group_real_dgp3 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/g_real_dgp3.Rds")
lambda_group_real_dgp3 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/g_real_dgp3.Rds")
usethis::use_data(Y_dgp3,g_real_dgp3,X_dgp3,factor_group_real_dgp3,lambda_group_real_dgp3,overwrite = TRUE)
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
X_dgp3 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/X_real_dgp3.Rds")
X_dgp3 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/X_dgp3.Rds")
factor_group_real_dgp3 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/factor_group_real_dgp3.Rds")
lambda_group_real_dgp3 = readRDS("C:/Users/hewoud/Dropbox/doctirisEwoud/data/lambda_group_real_dgp3.Rds")
usethis::use_data(Y_dgp3,g_real_dgp3,X_dgp3,factor_group_real_dgp3,lambda_group_real_dgp3,overwrite = TRUE)
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
aantalfactoren_common
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
aantalfactors_verschillend_per_group
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
#installing my package:
devtools::install("C:/Users/hewoud/Dropbox/doctirisEwoud/RobClustTimeSeries")
length( which(between(median_incomes,25000,40000) & between(mean_incomes,25000,40000)) )
use_git
use_git()
library(devtools)
use_git()
?use_git
?use_github
use_git()
use_git_config(user.name = "EH",user.email="ewoud.heyndels@vub.be")
