% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/03_IFE_algorithm_functions.R
\name{update_g}
\alias{update_g}
\title{Function that estimates group membership.}
\usage{
update_g(
  NN,
  TT,
  number_of_groups = number_of_groups_fixedvalue,
  number_of_variables = number_of_variables_fixedvalue,
  number_vars_estimated = number_vars_estimated_fixedvalue,
  number_of_group_factors = number_of_group_factors_fixedvalue,
  number_of_common_factors = number_of_common_factors_fixedvalue,
  method_estimate_factors,
  verbose = FALSE
)
}
\arguments{
\item{NN}{number of individuals}

\item{TT}{length of time series}

\item{number_of_groups}{number of groups estimated}

\item{number_of_variables}{number of observable variables}

\item{number_vars_estimated}{number of variables that are included in the algorithm and have their coefficient estimated. This is usually equal to number_of_variables.}

\item{number_of_group_factors}{number of groupfactors to be estimated}

\item{number_of_common_factors}{number of common factors to be estimated}

\item{method_estimate_factors}{defines method of robust estimaton of the factors: "macro", "pertmm" or "cz"}

\item{verbose}{when TRUE, it prints messages}
}
\value{
list: 1st element contains group membership and second element contains the values which are used to determine group membership
}
\description{
Function that estimates group membership.
}
\examples{
#This function needs several initial parameters to be initialized in order to work on itself
library(RCTS)
library(tidyverse)
library(robustbase)

X = RCTS::X_dgp3
Y = RCTS::Y_dgp3
#Set estimations for group factors and its loadings, and group membership to the true value
lambda_group = RCTS::lambda_group_true_dgp3
factor_group = RCTS::factor_group_true_dgp3
g_true = RCTS::g_true_dgp3 #true values of group membership
g = g_true #estimated values of group membership; set in this example to be equal to true values
#There are no common factors to be estimated  ->  use placeholder with values set to zero
lambda = matrix(0,nrow=1,ncol=300)
comfactor = matrix(0,nrow=1,ncol=30)
use_robust = TRUE
grid = expand.grid(1:300,1:30)
#Choose how coefficients of the observable are estimated
method_estimate_beta = "individual"
dgp1_AB = FALSE
dgp1_spread_group_centers = TRUE
method_estimate_factors = "macro"
number_vars_estimated_fixedvalue = 3
beta_est = estimate_beta(NN = 300, TT = 30,
  number_of_groups = 3, number_of_group_factors = c(3, 3, 3), number_of_common_factors = 0,
  number_of_variables = 3, number_vars_estimated = number_vars_estimated_fixedvalue,
  num_factors_may_vary = TRUE)[[1]]
grid = grid_add_variables(grid,beta_est, lambda, comfactor, NN = 300, TT = 30,
  number_of_variables = 3, number_vars_estimated = number_vars_estimated_fixedvalue,
  number_of_groups = 3)
g_new = update_g(NN = 300, TT = 30, number_of_groups = 3, number_of_variables = 3,
  number_vars_estimated = number_vars_estimated_fixedvalue,
  number_of_group_factors = c(3, 3, 3),
  number_of_common_factors = 0)[[1]]
}
